name: Build & deploy to DEV Server

on: pull_request
# on:
#   push:
#     branches: [ "main" ]
#   workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore Dependencies API 
        run: dotnet restore ./src/PlanManagement.sln 
      - name: Build API
        run: dotnet build --no-restore ./src/PlanManagement.sln 

      - name: Publish API
        run: dotnet publish -c Release ./src/PlanManagement.sln -o ${{env.DOTNET_ROOT}}/raj-host

      - name: Upload API Artifact
        uses: actions/upload-artifact@v3
        with:
          name: API
          path: ${{env.DOTNET_ROOT}}/raj-host

      - name: Build UI
        run: cd ./src/ui/src/ && npm install && npm run build
      
      - name: Upload UI Artifact
        uses: actions/upload-artifact@v3
        with:
          name: UI
          path: ${{env.DOTNET_ROOT}}/raj-host/wwwroot

      - name: Zip artifact for deployment
        run: zip release.zip ${{env.DOTNET_ROOT}}/raj-host/* -r

      - uses: actions/checkout@v4
      - run: cd ./src/ui/src/ && npm install && npm run build && cd ./src/ui/src/build/static

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: API-UI

      - uses: actions/checkout@v4
      - run: cd ./src/ui/src/

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_RAJWADA_DEMO }}
          channelId: live
          projectId: rajwada-demo

      # - name: Upload artifact for deployment job
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: API-UI
      #     path: release.zip

  # deploy:
  #   permissions:
  #     contents: none
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'DEV'
  #     url: ${{ steps.deploy-to-ftp.outputs.webapp-url }}

  #   steps:
  #     - name: Build UI
  #       run: cd ./src/ui/src/ && npm install && npm run build

  #     - uses: actions/checkout@v4
  #     - run: cd ./build/static

  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: API-UI

  #     - uses: actions/checkout@v4
  #     - run: cd ../../

  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: ${{ secrets.GITHUB_TOKEN }}
  #         firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_RAJWADA_DEMO }}
  #         channelId: live
  #         projectId: rajwada-demo
